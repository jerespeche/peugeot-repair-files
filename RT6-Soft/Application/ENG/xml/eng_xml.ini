
/* Typedefs */

typedef unsigned int bool;
typedef int          STATUS;

#define true        (bool)1
#define false       (bool)0
#define NULL        (void*)0

#define ERROR           ((STATUS)-1)
#define OK              ((STATUS)0)

typedef void *          MODULE_ID;

#define LOAD_NO_SYMBOLS         2
#define LOAD_LOCAL_SYMBOLS      4
#define LOAD_GLOBAL_SYMBOLS     8

/* Functions declaration */

int ModuleLoad(
                const char* p_root,
                const char* p_file_type,
                const char* p_module_type,
                const char* p_module_name,
                const char* p_bin_name,
                bool        p_open_flag
            );

MODULE_ID LoadAndExecuteFile( const char*    p_root,
                              const char*   p_file_name,
                              int           p_ld_symb,
                              int           p_invalid,
                              unsigned int  p_delay);

bool IsAppliBootFromHDD(void);

int main(void)
{
  int l_val = OK;
  if(true == IsAppliBootFromHDD())
  {
    MODULE_ID l_Module_Id = NULL;

    l_Module_Id = LoadAndExecuteFile(NULL, "ENG/XML/ENG_XML.out", LOAD_GLOBAL_SYMBOLS, 0, 0);
    if ( NULL == l_Module_Id )
    {
      l_val = ERROR;
    }
  }
  return(l_val);
}

