
/* Typedefs */

typedef unsigned int  bool;
typedef int           STATUS;

#define true          (bool)1
#define false         (bool)0
#define NULL          (void*)0

#define ERROR           ((STATUS)-1)
#define OK              ((STATUS)0)

/* Functions declaration */

int ModuleLoad( const char* p_root,const char* p_file_type,const char* p_module_type,
                const char* p_module_name,const char* p_bin_name,bool  p_open_flag );
int ModuleLoadConfig(
                const char* p_root,
                const char* p_file_type,
                const char* p_module_type,
                const char* p_module_name,
                const char* p_path_config_flag,
                const char* p_bin_name,
                bool        p_open_flag
            );
int GetSoftwareConfiguration(const char* p_module,const char** p_configSoftwareDatas);

char * strcpy
    (
    char *       s1,          /* string to copy to */
    const char * s2           /* string to copy from */
    );
char * strcat
    (
    char *       destination, /* string to be appended to */
    const char * append       /* string to append to destination */
    );


int main(void)
{
  int l_val;
  const char *l_value;

  if(ERROR == ModuleLoad(NULL,"Application","BCM","FP_NETWORK",NULL,true))
  {
    return(ERROR);
  }
  if(ERROR == ModuleLoad(NULL,"Application","BCM","CMM",NULL,true))
  {
    return(ERROR);
  }
  if(ERROR == ModuleLoad(NULL,"Application","BCM","USR_PROF",NULL,true))
  {
    return(ERROR);
  }
  if(ERROR == ModuleLoad(NULL,"Application","BCM","GOL",NULL,true))
  {
    return(ERROR);
  }
  if(ERROR == ModuleLoad(NULL,"Application","BCM","SYSTEM",NULL,true))
  {
    return(ERROR);
  }
  if(ERROR == ModuleLoad(NULL,"Application","BCM","ACP_DATA",NULL,true))
  {
    return(ERROR);
  }
  if(ERROR == ModuleLoad(NULL,"Application","BCM","AGENDA",NULL,true))
  {
    return(ERROR);
  }

  l_val = GetSoftwareConfiguration("CFG_SW_BRAND",&l_value);

  if (OK != l_val)
  {
    l_val = GetSoftwareConfiguration("CFG_SW_MANUFACTURER",&l_value);
  }

  if (OK == l_val)
  {
    char l_PathConfigFlag[255+1];

    strcpy(l_PathConfigFlag,"CFG_SW_BRAND_");
    strcat(l_PathConfigFlag,l_value);

    l_val = ModuleLoadConfig(NULL,"Application","BCM","DIAGS",l_PathConfigFlag,NULL,true);
  }

  return(l_val);
}

